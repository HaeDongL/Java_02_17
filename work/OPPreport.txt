<<<OPP의 이해 / Report 제출>>>

1. OOP(Object Oriented Programming)

객체지향 프로그래밍 이라는 의미인데 왜 객체지향 프로그래밍이냐면 현실 세계에서
표현 가능한 모든 것을 객체라고 하는데 그 객체를 시스템화 옮길 수 있는 프로그래밍이기 때문이다.



2. Object(객체)

객체는 현실에서 표현할 수 있는 모든것들을 객체라고 한다.
객체는 식별자, 상태, 행위로 이루어져있다.
객체는 물리적 객체와, 개념적 객체로 나뉘는데 물리적 객체는 직접 보고 만질수있는 것들을 말하며,
개념적 객체는 결제, 주문 등 이있다.



3.class

현실에서 표현되는 객체를 시스템으로 옮겨놓은것을 클래스라고 한다.
java class는 두 가지 가있는데 실행을 하게되는 application class와
현실세계에서 시스템화한 bean class가 있다. 이때 bean class는 실행 안한다.

추상화를 통해 목적에 맞게 걸러진 객체들의 속성과 행동을 가지고 시스템에 객체를
옮겨놓은것이다.
그리고 클래스로부터 생성된 것을 인스턴스(instance)라고한다.


4.abstraction(추상화)

클래스를 생성할때 객체들의 공통점과 사용될 목적에 맞게 핵심속성과 행위를 선택하는 작업이다.
교육기관에서 사용할 클래스인데, 키와 성격, 혈액형 등은 필요없다. 정말 필요한 공통된 속성만을
잡아내는 과정이다.




5.generalization(일반화) / Inheritance(상속)

일반화는 여러사물의 공통점을 찾아 넓은 개념으로 정의하는 것이다.
예를 들어 휴대폰, 텔레비전, 컴퓨터 는 모두 전자기기라는 것으로 표현할 수 있다.
이러한것을 일반화라고 하며, 일반화된 넓은 개념에 공통된 기능을 명시하여 각각의
객체별로 상속을하면 중복된 코드를 줄일 수 있다.


6. Specialization(구체적)

구체적 Specialization은 상속받은 기능을 더 확장 시켜가며 좀 더 명확하게 만드는 것을 말한다.
부모클래스(상위클래스)로부터 상속을받으면 부모클래스의 기능을 모두 사용할 수 있게되는데
하위클래스의 기능에 좀 더 가깝게 메소드를 재명시 하는 것을 말한다.

7. Realization

클래스에 정의만 해둔것을 필요하게되어 생성하는 것 이라고 생각한다.


8. Association

자바에서 연관관계를 나타내는데 두 클래스간에 무엇인가 관련성 있음을 뜻한다.
부모 자식 상속관계와 관련있는것 같은 생각이다.


9. dependency

의존이라는 의미로 자바에서는 두 클래스간의 관계라고도 말한다.
일반적으로 둘 중 하나가 다른 하나를 어떤 용도를 위해 사용한다.

10. Polymorphism

다형성은 하나의 객체가 여러가지 타입을 가질수 있는 것을 의미한다.

11. Encapsulation /절차은닉 / 정보은닉

캡슐화 감싸다라는 의미를 갖고있다.
자바에서는 연관된 목적을 가지는 변수와 함수를 하나의 클래스로 묶어 외부에서 쉽게 접근하지 못하도록
은닉하는 것이다. 캡슐화는 중요한 데이터를 쉽게 바꾸지 못하도록할 때 사용한다.

MethodOverloading

